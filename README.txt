Source code for: "Exploiting GAN Internal Capacity for High-Quality
    Reconstruction of Natural Images"

This directory contains associated source code to invert BigGAN generator for
128x128 resolution. Requires Tensorflow.

GENERATION OF RANDOM SAMPLES:
Generate 1000 random samples of BigGAN generator:
  $> python random_sample.py random_sample.json

INVERSION OF THE GENERATOR:
The optimization is split into two steps according to the paper:
First step, invesion to the latent space:
  $> python inversion.py params_latent.json

Second step, inversion to the dense layer:
  $> python inversion.py params_dense.json

INTERPOLATION:
Generate interpolations between the inverted images and generated images:
  $> python interpolation.py params_dense.json

SEGMENTATION:
Segment inverted images by clustering the attention map:
  $> python segmentation.py params_dense.json

Note: to replicate the experiments on real images from ImageNet, first
a hdf5 file must be created with random images from the dataset, similar to the
procedure in "random_sample.py". Then, the two step of optimization must be
executed (modify the "dataset:" parameter in params_latent.json to consider
custom datasets).
